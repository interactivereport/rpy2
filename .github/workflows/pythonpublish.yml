name: Upload Python Package

on:
  release:
    types:
      - released
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
     - RELEASE_3_*_*

env:
  default_os: "ubuntu-latest"
  default_r: "release"
jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: 39
            platform_id: manyliunx2014
            manylinux_image: ghcr.io/rpy2/rpy2-docker/manylinux2014_x86_64:r4.2.2
            r-version: release
          - os: macos-latest
            python: 39
            platform_id: macosx_x86_64
            r-version: release
          - os: macos-latest
            python: 39
            platform_id: macosx_arm64
            r-version: release
    steps:
    - uses: actions/checkout@v3
    -
      name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools cibuildwheel
    - name: Build wheel
      env:
          CIBW_ARCHS: all
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_BUILD_VERBOSITY: 1
      run: |
        python -m cibuildwheel --output wheelhouse .
    - name: Build sdist
      if: (matrix.r-version == env.default_r && matrix.os == env.default_os)
      run: |
        python -m build -o dist/ --sdist .
    - id: getfilename_wheel
      run: |
        echo "::set-output name=file::$(basename -a $(ls dist/*.whl))"
    - id: getfilename_targz
      if: (matrix.r-version == env.default_r && matrix.os == env.default_os)
      run: |
        echo "::set-output name=file::$(basename -a $(ls dist/*.tar.gz))"
    - name: Create package for master
      uses: actions/upload-artifact@v1
      if: (github.event_name == 'pull_request' || github.event_name == 'push') && matrix.r-version == env.default_r
      with:
          name: ${{ steps.getfilename_wheel.outputs.file }}
          path: dist/${{ steps.getfilename_wheel.outputs.file }}
    - name: Create source package for master
      uses: actions/upload-artifact@v3
      if: (github.event_name == 'pull_request' || github.event_name == 'push') && (matrix.r-version == env.default_r && matrix.os == env.default_os)
      with:
          name: Uploading wheel.
          path: wheelhouse/*.whl
    - name: Publish
      if: github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: dist
