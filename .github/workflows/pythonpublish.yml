name: Upload Python Package

on:
  release:
    types:
      - released
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
     - RELEASE_3_*_*

env:
  default_os: "ubuntu-latest"
  default_r: "release"
  default_python: "3.10"
jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id}}
    runs-on: ${{ matrix.os }}
    permissions:
      packages: read
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux2014
            manylinux_x86_64_image: ghcr.io/rpy2/rpy2-docker/manylinux2014_x86_64:r4.2.2
            manylinux_i686_image: ghcr.io/rpy2/rpy2-docker/manylinux2014_i686:r4.2.2
            r-version: release
          - os: macos-12
            python: 310
            platform_id: macosx_x86_64
            r-version: release
          - os: macos-12
            python: 310
            platform_id: macosx_arm64
            r-version: release
    steps:
    - uses: actions/checkout@v3
    -
      name: Log in to the Container registry
      if: matrix.os == 'ubuntu-latest'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools build cibuildwheel
    - name: Build wheel
      uses: pypa/cibuildwheel@v2.11.4
      env:
          RPY2_CFFI_MODE: API
          CIBW_SKIP: cp36-* cp37-* pp* *-musllinux_*
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_x86_64_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_i686_image }}
          CIBW_ENVIRONMENT_PASS_LINUX: RPY2_CFFI_MODE
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH="$(R RHOME)/$(R CMD config LIBnn):${LD_LIBRARY_PATH}"
          CIBW_BUILD_VERBOSITY: 1
      with:
        output-dir: wheelhouse
        config-file: pyproject.toml
    - name: Build sdist
      if: (matrix.r-version == env.default_r && matrix.os == env.default_os)
      run: |
        python -m build -o dist/ --sdist .
    - id: getfilename_wheel
      run: |
        echo "file=$(basename -a $(ls dist/*.whl))" >> $GITHUB_OUTPUT
    - id: getfilename_targz
      if: (matrix.r-version == env.default_r && matrix.os == env.default_os)
      run: |
        echo "::set-output name=file::$(basename -a $(ls dist/*.tar.gz))"
    - name: Upload source package
      uses: actions/upload-artifact@v3
      if: (github.event_name == 'pull_request' || github.event_name == 'push') && matrix.r-version == env.default_r
      with:
          name: source-distribution
          path: dist/*.tar.gz
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      if: (github.event_name == 'pull_request' || github.event_name == 'push') && (matrix.r-version == env.default_r && matrix.os == env.default_os)
      with:
          name: binary-wheels-${{ matrix.platform_id }}
          path: wheelhouse/*.whl
    - name: Publish
      if: github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist/
